<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="User_pictureBox.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZCWtRUlrftuap53dFC9jIQeZLWRrDtia37aEnNEUX8dCDjJbyNYcEOGix62zxYym+DoWcpDZQrYqXPSY
        Mluto56WFvPMkYy0ySzkIMpC9h7b1knvaWmN0lporWMhB5ktJKlVuD2EjO5fZhQLeSAKQtZOGrdH9y9T
        2w/Z+94YgkfSM69dYiEHURCyJlRvU5t5XcTspjixkIMoCFlrjiNadP8yzz7+yFjIQRSErDXHe5vazz7+
        yFjIQRSErO3YeVbI1k6hM2IhB1EQsna1BtGi+5epCT27KU4s5CAKQtIrjOi97FcTeqQ9c1Qs5CAKQtaa
        470Vrnb5ceY+zyUWchAFIUnUHO8Vkt5gRHTfs2MhB1ERMjpxiBbdt0xUYZXflwIWspGoOd475EZCIkJ0
        37NjIQdRETJqbo/MAUsUrtIQCzmIspDR/Wop56AKTXFiIQdREZIm9prRH5+VJ763h3l0LOQgKkKWvcTR
        4ypP/OyfLiyxkIOoCFm2bjiR0f1qKRdFCldpiIUcREXIcqU8uigpt6ApNMWJhRxkdK52ZEp6h13uVy5q
        LOQ2skKCyoo0ulrTkjKSUeFLRsWPOgcqSAsJnMTZC4FaNaltkuD2SOLR+efe4bhUK+OCvJALfJCzxKz9
        FAFKKVkERTLCrKY4x7j1HpS4jJALnGyGnN7ryXukNcQtUm7JCGf+dIFjoeepXhFLLifkGk4+J5nKydwo
        OjF7pLbzew0N9C0Z4cg5Me+flhKfx9UkXHNpIUsQgj+jh0BUrXI4fTRlc/xR9phyIB7Vj2PifTINoEV2
        F24l5BacOKoHJxExkLW3BcN996CnKY5wHBevyXFyvEvVu5N4NdII2YKTzUlHXKosEjDEIsRebRKeh6Gd
        /yW8Dq+3yNYa8jNgIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0UFtJI
        YSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0U
        FtJIYSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khh
        IY0UFtJIYSGNFBbSSGEhjRQW0khhIY0UFtJIYSGNFBbSSGEhjRQW0khhIY0QLy//AOCMFZw/QelxAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>